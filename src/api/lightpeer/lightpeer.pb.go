// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lightpeer.proto

package lightpeer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Lightblock_BlockType int32

const (
	Lightblock_NETWORK Lightblock_BlockType = 0
	Lightblock_CLIENT  Lightblock_BlockType = 1
)

var Lightblock_BlockType_name = map[int32]string{
	0: "NETWORK",
	1: "CLIENT",
}

var Lightblock_BlockType_value = map[string]int32{
	"NETWORK": 0,
	"CLIENT":  1,
}

func (x Lightblock_BlockType) String() string {
	return proto.EnumName(Lightblock_BlockType_name, int32(x))
}

func (Lightblock_BlockType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{0, 0}
}

type Lightblock struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Payload              []byte               `protobuf:"bytes,2,opt,name=Payload,proto3" json:"Payload,omitempty"`
	PrevID               string               `protobuf:"bytes,3,opt,name=PrevID,proto3" json:"PrevID,omitempty"`
	Type                 Lightblock_BlockType `protobuf:"varint,9,opt,name=Type,proto3,enum=Lightblock_BlockType" json:"Type,omitempty"`
	LastUpdated          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Lightblock) Reset()         { *m = Lightblock{} }
func (m *Lightblock) String() string { return proto.CompactTextString(m) }
func (*Lightblock) ProtoMessage()    {}
func (*Lightblock) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{0}
}

func (m *Lightblock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lightblock.Unmarshal(m, b)
}
func (m *Lightblock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lightblock.Marshal(b, m, deterministic)
}
func (m *Lightblock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lightblock.Merge(m, src)
}
func (m *Lightblock) XXX_Size() int {
	return xxx_messageInfo_Lightblock.Size(m)
}
func (m *Lightblock) XXX_DiscardUnknown() {
	xxx_messageInfo_Lightblock.DiscardUnknown(m)
}

var xxx_messageInfo_Lightblock proto.InternalMessageInfo

func (m *Lightblock) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Lightblock) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Lightblock) GetPrevID() string {
	if m != nil {
		return m.PrevID
	}
	return ""
}

func (m *Lightblock) GetType() Lightblock_BlockType {
	if m != nil {
		return m.Type
	}
	return Lightblock_NETWORK
}

func (m *Lightblock) GetLastUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

type ConnectRequest struct {
	Peer                 *PeerInfo `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{1}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetPeer() *PeerInfo {
	if m != nil {
		return m.Peer
	}
	return nil
}

type ConnectResponse struct {
	ChainBlocks          []*Lightblock `protobuf:"bytes,1,rep,name=ChainBlocks,proto3" json:"ChainBlocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{2}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetChainBlocks() []*Lightblock {
	if m != nil {
		return m.ChainBlocks
	}
	return nil
}

type PeerInfo struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{3}
}

func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (m *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(m, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *PeerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PersistRequest struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersistRequest) Reset()         { *m = PersistRequest{} }
func (m *PersistRequest) String() string { return proto.CompactTextString(m) }
func (*PersistRequest) ProtoMessage()    {}
func (*PersistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{4}
}

func (m *PersistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersistRequest.Unmarshal(m, b)
}
func (m *PersistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersistRequest.Marshal(b, m, deterministic)
}
func (m *PersistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersistRequest.Merge(m, src)
}
func (m *PersistRequest) XXX_Size() int {
	return xxx_messageInfo_PersistRequest.Size(m)
}
func (m *PersistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersistRequest proto.InternalMessageInfo

func (m *PersistRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type PersistResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersistResponse) Reset()         { *m = PersistResponse{} }
func (m *PersistResponse) String() string { return proto.CompactTextString(m) }
func (*PersistResponse) ProtoMessage()    {}
func (*PersistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{5}
}

func (m *PersistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersistResponse.Unmarshal(m, b)
}
func (m *PersistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersistResponse.Marshal(b, m, deterministic)
}
func (m *PersistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersistResponse.Merge(m, src)
}
func (m *PersistResponse) XXX_Size() int {
	return xxx_messageInfo_PersistResponse.Size(m)
}
func (m *PersistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersistResponse proto.InternalMessageInfo

func (m *PersistResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type EmptyQueryRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyQueryRequest) Reset()         { *m = EmptyQueryRequest{} }
func (m *EmptyQueryRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyQueryRequest) ProtoMessage()    {}
func (*EmptyQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{6}
}

func (m *EmptyQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyQueryRequest.Unmarshal(m, b)
}
func (m *EmptyQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyQueryRequest.Marshal(b, m, deterministic)
}
func (m *EmptyQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyQueryRequest.Merge(m, src)
}
func (m *EmptyQueryRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyQueryRequest.Size(m)
}
func (m *EmptyQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyQueryRequest proto.InternalMessageInfo

type QueryResponse struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{7}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type NewBlockRequest struct {
	Contents             string   `protobuf:"bytes,1,opt,name=Contents,proto3" json:"Contents,omitempty"`
	UID                  string   `protobuf:"bytes,2,opt,name=UID,proto3" json:"UID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewBlockRequest) Reset()         { *m = NewBlockRequest{} }
func (m *NewBlockRequest) String() string { return proto.CompactTextString(m) }
func (*NewBlockRequest) ProtoMessage()    {}
func (*NewBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{8}
}

func (m *NewBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewBlockRequest.Unmarshal(m, b)
}
func (m *NewBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewBlockRequest.Marshal(b, m, deterministic)
}
func (m *NewBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewBlockRequest.Merge(m, src)
}
func (m *NewBlockRequest) XXX_Size() int {
	return xxx_messageInfo_NewBlockRequest.Size(m)
}
func (m *NewBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewBlockRequest proto.InternalMessageInfo

func (m *NewBlockRequest) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *NewBlockRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

type NewBlockResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewBlockResponse) Reset()         { *m = NewBlockResponse{} }
func (m *NewBlockResponse) String() string { return proto.CompactTextString(m) }
func (*NewBlockResponse) ProtoMessage()    {}
func (*NewBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{9}
}

func (m *NewBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewBlockResponse.Unmarshal(m, b)
}
func (m *NewBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewBlockResponse.Marshal(b, m, deterministic)
}
func (m *NewBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewBlockResponse.Merge(m, src)
}
func (m *NewBlockResponse) XXX_Size() int {
	return xxx_messageInfo_NewBlockResponse.Size(m)
}
func (m *NewBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewBlockResponse proto.InternalMessageInfo

func (m *NewBlockResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterEnum("Lightblock_BlockType", Lightblock_BlockType_name, Lightblock_BlockType_value)
	proto.RegisterType((*Lightblock)(nil), "Lightblock")
	proto.RegisterType((*ConnectRequest)(nil), "ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "ConnectResponse")
	proto.RegisterType((*PeerInfo)(nil), "PeerInfo")
	proto.RegisterType((*PersistRequest)(nil), "PersistRequest")
	proto.RegisterType((*PersistResponse)(nil), "PersistResponse")
	proto.RegisterType((*EmptyQueryRequest)(nil), "EmptyQueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "QueryResponse")
	proto.RegisterType((*NewBlockRequest)(nil), "NewBlockRequest")
	proto.RegisterType((*NewBlockResponse)(nil), "NewBlockResponse")
}

func init() {
	proto.RegisterFile("lightpeer.proto", fileDescriptor_fcee3e88f49c2881)
}

var fileDescriptor_fcee3e88f49c2881 = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x9b, 0x6d, 0x69, 0x37, 0x93, 0xdd, 0x24, 0x6b, 0x04, 0x8a, 0x22, 0x21, 0x90, 0xc5,
	0x81, 0x45, 0x5a, 0x07, 0x95, 0x03, 0x27, 0x04, 0xda, 0xd2, 0x43, 0x45, 0x15, 0x82, 0xd5, 0x15,
	0x12, 0x17, 0x94, 0x6e, 0xdd, 0x6e, 0x44, 0x1a, 0x87, 0xc4, 0x05, 0xe5, 0x41, 0xb9, 0xf2, 0x2c,
	0x38, 0x6e, 0x9c, 0xfe, 0x41, 0x68, 0x2f, 0xd5, 0x8c, 0xf3, 0xcd, 0xcc, 0x37, 0x3f, 0xbb, 0xe0,
	0xa4, 0xc9, 0xea, 0x4e, 0xe4, 0x8c, 0x15, 0x24, 0x2f, 0xb8, 0xe0, 0xfe, 0xd3, 0x15, 0xe7, 0xab,
	0x94, 0x05, 0x2a, 0x9b, 0x6f, 0x96, 0x81, 0x48, 0xd6, 0xac, 0x14, 0xf1, 0x3a, 0xdf, 0x0a, 0xf0,
	0x1f, 0x03, 0x60, 0x5a, 0x17, 0xcd, 0x53, 0x7e, 0xfb, 0x1d, 0xd9, 0x70, 0x32, 0xf9, 0xe0, 0x19,
	0xcf, 0x8c, 0x17, 0x26, 0x95, 0x11, 0xf2, 0x60, 0x10, 0xc5, 0x55, 0xca, 0xe3, 0x85, 0x77, 0x22,
	0x0f, 0xcf, 0xa8, 0x4e, 0xd1, 0x63, 0xe8, 0x47, 0x05, 0xfb, 0x29, 0xd5, 0x5d, 0xa5, 0x6e, 0x32,
	0x74, 0x09, 0xbd, 0x59, 0x95, 0x33, 0xcf, 0x94, 0xa7, 0xf6, 0xf0, 0x11, 0xd9, 0x35, 0x27, 0xd7,
	0xf5, 0x6f, 0xfd, 0x91, 0x2a, 0x09, 0x7a, 0x0b, 0x67, 0x69, 0x5c, 0x8a, 0x6f, 0x9b, 0x7c, 0x11,
	0x0b, 0xb6, 0xf0, 0x40, 0x96, 0x58, 0x43, 0x9f, 0x6c, 0x3d, 0x13, 0xed, 0x99, 0xcc, 0xb4, 0x67,
	0x6a, 0xd5, 0xfa, 0x9b, 0xad, 0x1c, 0x3f, 0x07, 0xb3, 0xed, 0x88, 0x2c, 0x18, 0x84, 0xe3, 0xd9,
	0x97, 0x4f, 0xf4, 0xa3, 0xdb, 0x41, 0x00, 0xfd, 0xd1, 0x74, 0x32, 0x0e, 0x67, 0xae, 0x81, 0x03,
	0xb0, 0x47, 0x3c, 0xcb, 0xd8, 0xad, 0xa0, 0xec, 0xc7, 0x46, 0xf6, 0x41, 0x4f, 0xa0, 0x17, 0x49,
	0x42, 0x6a, 0x4b, 0x6b, 0x68, 0x92, 0x3a, 0x99, 0x64, 0x4b, 0x4e, 0xd5, 0x31, 0x7e, 0x0f, 0x4e,
	0x5b, 0x50, 0xe6, 0x3c, 0x2b, 0x19, 0xba, 0x02, 0x6b, 0x74, 0x17, 0x27, 0x99, 0x1a, 0x57, 0xca,
	0xc2, 0xae, 0x2c, 0xb4, 0xf6, 0x56, 0xa3, 0xfb, 0xdf, 0x31, 0x81, 0x53, 0xdd, 0x53, 0x01, 0x8d,
	0x5a, 0xa0, 0x11, 0x42, 0xd0, 0x0b, 0xe3, 0x35, 0x53, 0x34, 0x4d, 0xaa, 0x62, 0xfc, 0x12, 0xec,
	0x88, 0x15, 0x65, 0x52, 0xb6, 0x16, 0xf7, 0xb0, 0x1b, 0x07, 0xd8, 0xf1, 0x15, 0x38, 0xad, 0xb6,
	0x71, 0xe7, 0xc3, 0xa9, 0x8e, 0x9b, 0x41, 0x6d, 0x8e, 0x1f, 0xc2, 0xc5, 0x78, 0x9d, 0x8b, 0xea,
	0xf3, 0x86, 0x15, 0x55, 0xd3, 0x1d, 0x5f, 0xc2, 0x79, 0x93, 0x37, 0x1d, 0xfe, 0x3f, 0xee, 0x1d,
	0x38, 0x21, 0xfb, 0xa5, 0xf6, 0xd2, 0xde, 0xe4, 0x38, 0xc9, 0x47, 0xb0, 0x4c, 0x94, 0x7a, 0x9c,
	0xce, 0x91, 0x0b, 0xdd, 0x1b, 0xf9, 0x22, 0xb6, 0xcb, 0xd5, 0xa1, 0x64, 0xe1, 0xee, 0x1a, 0xdc,
	0x6f, 0x78, 0xf8, 0xdb, 0x00, 0x73, 0xaa, 0x1f, 0x31, 0x22, 0x30, 0x68, 0xee, 0x02, 0x39, 0xe4,
	0xf0, 0x1a, 0x7d, 0x97, 0x1c, 0x5d, 0x13, 0xee, 0xd4, 0xfa, 0x86, 0x8e, 0xd4, 0x1f, 0x32, 0x95,
	0xfa, 0x23, 0x70, 0x52, 0x1f, 0xc0, 0x03, 0x45, 0x02, 0x21, 0xf2, 0x0f, 0x26, 0xdf, 0x26, 0x07,
	0x94, 0x70, 0xe7, 0x95, 0x81, 0xde, 0x80, 0x1d, 0x72, 0x91, 0x2c, 0x2b, 0xbd, 0x14, 0x72, 0xc9,
	0x11, 0x20, 0xff, 0x82, 0x1c, 0x6f, 0x8c, 0x3b, 0xd7, 0xce, 0xd7, 0xf3, 0x38, 0x4f, 0x82, 0xf6,
	0xff, 0x39, 0xef, 0xab, 0xe7, 0xfd, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x35, 0x43, 0x8e,
	0x16, 0xb3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LightpeerClient is the client API for Lightpeer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LightpeerClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Persist(ctx context.Context, in *PersistRequest, opts ...grpc.CallOption) (*PersistResponse, error)
	Query(ctx context.Context, in *EmptyQueryRequest, opts ...grpc.CallOption) (Lightpeer_QueryClient, error)
	NotifyNewBlock(ctx context.Context, in *NewBlockRequest, opts ...grpc.CallOption) (*NewBlockResponse, error)
}

type lightpeerClient struct {
	cc grpc.ClientConnInterface
}

func NewLightpeerClient(cc grpc.ClientConnInterface) LightpeerClient {
	return &lightpeerClient{cc}
}

func (c *lightpeerClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/Lightpeer/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightpeerClient) Persist(ctx context.Context, in *PersistRequest, opts ...grpc.CallOption) (*PersistResponse, error) {
	out := new(PersistResponse)
	err := c.cc.Invoke(ctx, "/Lightpeer/Persist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightpeerClient) Query(ctx context.Context, in *EmptyQueryRequest, opts ...grpc.CallOption) (Lightpeer_QueryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Lightpeer_serviceDesc.Streams[0], "/Lightpeer/Query", opts...)
	if err != nil {
		return nil, err
	}
	x := &lightpeerQueryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Lightpeer_QueryClient interface {
	Recv() (*QueryResponse, error)
	grpc.ClientStream
}

type lightpeerQueryClient struct {
	grpc.ClientStream
}

func (x *lightpeerQueryClient) Recv() (*QueryResponse, error) {
	m := new(QueryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *lightpeerClient) NotifyNewBlock(ctx context.Context, in *NewBlockRequest, opts ...grpc.CallOption) (*NewBlockResponse, error) {
	out := new(NewBlockResponse)
	err := c.cc.Invoke(ctx, "/Lightpeer/NotifyNewBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LightpeerServer is the server API for Lightpeer service.
type LightpeerServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Persist(context.Context, *PersistRequest) (*PersistResponse, error)
	Query(*EmptyQueryRequest, Lightpeer_QueryServer) error
	NotifyNewBlock(context.Context, *NewBlockRequest) (*NewBlockResponse, error)
}

// UnimplementedLightpeerServer can be embedded to have forward compatible implementations.
type UnimplementedLightpeerServer struct {
}

func (*UnimplementedLightpeerServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedLightpeerServer) Persist(ctx context.Context, req *PersistRequest) (*PersistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Persist not implemented")
}
func (*UnimplementedLightpeerServer) Query(req *EmptyQueryRequest, srv Lightpeer_QueryServer) error {
	return status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedLightpeerServer) NotifyNewBlock(ctx context.Context, req *NewBlockRequest) (*NewBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyNewBlock not implemented")
}

func RegisterLightpeerServer(s *grpc.Server, srv LightpeerServer) {
	s.RegisterService(&_Lightpeer_serviceDesc, srv)
}

func _Lightpeer_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightpeerServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lightpeer/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightpeerServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightpeer_Persist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightpeerServer).Persist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lightpeer/Persist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightpeerServer).Persist(ctx, req.(*PersistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightpeer_Query_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyQueryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LightpeerServer).Query(m, &lightpeerQueryServer{stream})
}

type Lightpeer_QueryServer interface {
	Send(*QueryResponse) error
	grpc.ServerStream
}

type lightpeerQueryServer struct {
	grpc.ServerStream
}

func (x *lightpeerQueryServer) Send(m *QueryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Lightpeer_NotifyNewBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightpeerServer).NotifyNewBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lightpeer/NotifyNewBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightpeerServer).NotifyNewBlock(ctx, req.(*NewBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lightpeer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Lightpeer",
	HandlerType: (*LightpeerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Lightpeer_Connect_Handler,
		},
		{
			MethodName: "Persist",
			Handler:    _Lightpeer_Persist_Handler,
		},
		{
			MethodName: "NotifyNewBlock",
			Handler:    _Lightpeer_NotifyNewBlock_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Query",
			Handler:       _Lightpeer_Query_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "lightpeer.proto",
}
