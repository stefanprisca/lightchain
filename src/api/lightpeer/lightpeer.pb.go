// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lightpeer.proto

package lightpeer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnectRequest struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{0}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type ConnectResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{1}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type TransactionRequest struct {
	Payload              string   `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{2}
}

func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequest.Unmarshal(m, b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
}
func (m *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(m, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionRequest.Size(m)
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func (m *TransactionRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type TrasactionResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrasactionResponse) Reset()         { *m = TrasactionResponse{} }
func (m *TrasactionResponse) String() string { return proto.CompactTextString(m) }
func (*TrasactionResponse) ProtoMessage()    {}
func (*TrasactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{3}
}

func (m *TrasactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrasactionResponse.Unmarshal(m, b)
}
func (m *TrasactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrasactionResponse.Marshal(b, m, deterministic)
}
func (m *TrasactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrasactionResponse.Merge(m, src)
}
func (m *TrasactionResponse) XXX_Size() int {
	return xxx_messageInfo_TrasactionResponse.Size(m)
}
func (m *TrasactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrasactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrasactionResponse proto.InternalMessageInfo

func (m *TrasactionResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type NewBlockRequest struct {
	Contents             string   `protobuf:"bytes,1,opt,name=Contents,proto3" json:"Contents,omitempty"`
	UID                  string   `protobuf:"bytes,2,opt,name=UID,proto3" json:"UID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewBlockRequest) Reset()         { *m = NewBlockRequest{} }
func (m *NewBlockRequest) String() string { return proto.CompactTextString(m) }
func (*NewBlockRequest) ProtoMessage()    {}
func (*NewBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{4}
}

func (m *NewBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewBlockRequest.Unmarshal(m, b)
}
func (m *NewBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewBlockRequest.Marshal(b, m, deterministic)
}
func (m *NewBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewBlockRequest.Merge(m, src)
}
func (m *NewBlockRequest) XXX_Size() int {
	return xxx_messageInfo_NewBlockRequest.Size(m)
}
func (m *NewBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewBlockRequest proto.InternalMessageInfo

func (m *NewBlockRequest) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *NewBlockRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

type NewBlockResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewBlockResponse) Reset()         { *m = NewBlockResponse{} }
func (m *NewBlockResponse) String() string { return proto.CompactTextString(m) }
func (*NewBlockResponse) ProtoMessage()    {}
func (*NewBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcee3e88f49c2881, []int{5}
}

func (m *NewBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewBlockResponse.Unmarshal(m, b)
}
func (m *NewBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewBlockResponse.Marshal(b, m, deterministic)
}
func (m *NewBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewBlockResponse.Merge(m, src)
}
func (m *NewBlockResponse) XXX_Size() int {
	return xxx_messageInfo_NewBlockResponse.Size(m)
}
func (m *NewBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewBlockResponse proto.InternalMessageInfo

func (m *NewBlockResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*ConnectRequest)(nil), "ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "ConnectResponse")
	proto.RegisterType((*TransactionRequest)(nil), "TransactionRequest")
	proto.RegisterType((*TrasactionResponse)(nil), "TrasactionResponse")
	proto.RegisterType((*NewBlockRequest)(nil), "NewBlockRequest")
	proto.RegisterType((*NewBlockResponse)(nil), "NewBlockResponse")
}

func init() {
	proto.RegisterFile("lightpeer.proto", fileDescriptor_fcee3e88f49c2881)
}

var fileDescriptor_fcee3e88f49c2881 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x9b, 0xbe, 0xf0, 0xc6, 0x0e, 0x98, 0x8d, 0xe3, 0x25, 0xe4, 0x54, 0xf6, 0xe4, 0xc5,
	0x55, 0x14, 0xf1, 0x28, 0x54, 0x3d, 0x14, 0xa4, 0x94, 0xa2, 0x17, 0x6f, 0x6b, 0x1c, 0x35, 0x18,
	0x76, 0x63, 0x76, 0x8a, 0xf6, 0x33, 0xf9, 0x25, 0x5d, 0x43, 0x36, 0x62, 0x3c, 0xe8, 0x6d, 0x66,
	0xf8, 0xcd, 0x9f, 0xe7, 0x19, 0x10, 0x55, 0xf9, 0xf8, 0xc4, 0x35, 0x51, 0xa3, 0xea, 0xc6, 0xb2,
	0x95, 0x53, 0x48, 0xce, 0xad, 0x31, 0x54, 0xf0, 0x8a, 0x5e, 0xd6, 0xe4, 0x18, 0x13, 0x18, 0xcf,
	0x97, 0x59, 0x34, 0x8d, 0xf6, 0x26, 0x2b, 0x1f, 0xc9, 0x7d, 0x10, 0x3d, 0xe1, 0x6a, 0x6b, 0x1c,
	0x61, 0x0e, 0x5b, 0x21, 0xee, 0xc0, 0x3e, 0x97, 0x0a, 0xf0, 0xba, 0xd1, 0xc6, 0xe9, 0x82, 0x4b,
	0x6b, 0xc2, 0xd0, 0x0c, 0xe2, 0xa5, 0xde, 0x54, 0x56, 0xdf, 0x77, 0x0d, 0x21, 0x95, 0x87, 0x2d,
	0xdf, 0xe3, 0x7f, 0xd8, 0x70, 0x06, 0x62, 0x41, 0xaf, 0xb3, 0xca, 0x16, 0xcf, 0x61, 0xbc, 0xc7,
	0xfd, 0x8d, 0x4c, 0x86, 0x5d, 0xc0, 0x43, 0x8e, 0x29, 0xfc, 0xbb, 0x99, 0x5f, 0x64, 0xe3, 0xb6,
	0xfc, 0x19, 0xfa, 0x13, 0xd3, 0xaf, 0x01, 0xbf, 0x2f, 0x3c, 0x7a, 0x8f, 0x60, 0x72, 0x15, 0x7c,
	0x43, 0x05, 0x71, 0xe7, 0x07, 0x0a, 0xf5, 0xdd, 0xbb, 0x3c, 0x55, 0x03, 0xab, 0xe4, 0x08, 0x4f,
	0x20, 0xbe, 0x7c, 0xa3, 0x62, 0xcd, 0x84, 0xbb, 0xea, 0xa7, 0x35, 0x79, 0x5b, 0x1c, 0xe8, 0xf7,
	0x6d, 0xa7, 0x90, 0x2c, 0x2c, 0x97, 0x0f, 0x9b, 0x70, 0x2a, 0xa6, 0x6a, 0x20, 0x3b, 0xdf, 0x51,
	0x43, 0x1d, 0x72, 0x34, 0x13, 0xb7, 0xdb, 0xba, 0x2e, 0x0f, 0xfa, 0x47, 0xdf, 0xfd, 0x6f, 0x3f,
	0x7d, 0xfc, 0x11, 0x00, 0x00, 0xff, 0xff, 0x43, 0x6a, 0x2b, 0xb5, 0xfc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LightpeerClient is the client API for Lightpeer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LightpeerClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Execute(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TrasactionResponse, error)
	NotifyNewBlock(ctx context.Context, in *NewBlockRequest, opts ...grpc.CallOption) (*NewBlockResponse, error)
}

type lightpeerClient struct {
	cc grpc.ClientConnInterface
}

func NewLightpeerClient(cc grpc.ClientConnInterface) LightpeerClient {
	return &lightpeerClient{cc}
}

func (c *lightpeerClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/Lightpeer/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightpeerClient) Execute(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TrasactionResponse, error) {
	out := new(TrasactionResponse)
	err := c.cc.Invoke(ctx, "/Lightpeer/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightpeerClient) NotifyNewBlock(ctx context.Context, in *NewBlockRequest, opts ...grpc.CallOption) (*NewBlockResponse, error) {
	out := new(NewBlockResponse)
	err := c.cc.Invoke(ctx, "/Lightpeer/NotifyNewBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LightpeerServer is the server API for Lightpeer service.
type LightpeerServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Execute(context.Context, *TransactionRequest) (*TrasactionResponse, error)
	NotifyNewBlock(context.Context, *NewBlockRequest) (*NewBlockResponse, error)
}

// UnimplementedLightpeerServer can be embedded to have forward compatible implementations.
type UnimplementedLightpeerServer struct {
}

func (*UnimplementedLightpeerServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedLightpeerServer) Execute(ctx context.Context, req *TransactionRequest) (*TrasactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}
func (*UnimplementedLightpeerServer) NotifyNewBlock(ctx context.Context, req *NewBlockRequest) (*NewBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyNewBlock not implemented")
}

func RegisterLightpeerServer(s *grpc.Server, srv LightpeerServer) {
	s.RegisterService(&_Lightpeer_serviceDesc, srv)
}

func _Lightpeer_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightpeerServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lightpeer/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightpeerServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightpeer_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightpeerServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lightpeer/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightpeerServer).Execute(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightpeer_NotifyNewBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightpeerServer).NotifyNewBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lightpeer/NotifyNewBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightpeerServer).NotifyNewBlock(ctx, req.(*NewBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lightpeer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Lightpeer",
	HandlerType: (*LightpeerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Lightpeer_Connect_Handler,
		},
		{
			MethodName: "Execute",
			Handler:    _Lightpeer_Execute_Handler,
		},
		{
			MethodName: "NotifyNewBlock",
			Handler:    _Lightpeer_NotifyNewBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lightpeer.proto",
}
